import { c as create_ssr_component, b as add_attribute, d as each, e as escape } from "../../../chunks/ssr.js";
const css = {
  code: "table.svelte-1qvw0y3{width:100%;border-collapse:collapse;margin-top:20px}th.svelte-1qvw0y3,td.svelte-1qvw0y3{padding:10px;border:1px solid #dfdfc3;text-align:left}th.svelte-1qvw0y3{background-color:#dbd6b9}img.svelte-1qvw0y3{border-radius:4px}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\r\\n    import { onMount } from 'svelte';\\r\\n    /**\\r\\n\\t * @type {any[]}\\r\\n\\t */\\r\\n    let ingredients = [];\\r\\n\\r\\n    // Összetevők lekérése az API-ból\\r\\n    async function fetchIngredients() {\\r\\n        const response = await fetch('/api/ingredients');\\r\\n        ingredients = await response.json();\\r\\n    }\\r\\n\\r\\n    // Összetevők betöltése az oldal betöltésekor\\r\\n    onMount(fetchIngredients);\\r\\n\\r\\n    // Összetevő törlése\\r\\n    /**\\r\\n\\t * @param {any} id\\r\\n\\t */\\r\\n    async function deleteIngredient(id) {\\r\\n        const response = await fetch('/api/ingredients', {\\r\\n            method: 'DELETE',\\r\\n            headers: { 'Content-Type': 'application/json' },\\r\\n            body: JSON.stringify({ id })\\r\\n        });\\r\\n\\r\\n        if (response.ok) {\\r\\n            ingredients = ingredients.filter(ingredient => ingredient.id !== id);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    let name = '';\\r\\n    let quantity = '';\\r\\n    let unit = '';\\r\\n    let calories = '';\\r\\n    let protein = '';\\r\\n    let fat = '';\\r\\n    let sugar = '';\\r\\n    let notes = '';\\r\\n    let image = '';\\r\\n\\r\\n    async function addIngredient() {\\r\\n        const newIngredient = { id: crypto.randomUUID(), name, quantity, unit, calories, protein, fat, sugar, notes, image };\\r\\n        const response = await fetch('/api/ingredients', {\\r\\n            method: 'POST',\\r\\n            headers: { 'Content-Type': 'application/json' },\\r\\n            body: JSON.stringify(newIngredient)\\r\\n        });\\r\\n\\r\\n        if (response.ok) {\\r\\n            ingredients = [...ingredients, newIngredient];\\r\\n            name = quantity = unit = calories = protein = fat = sugar = notes = image = '';\\r\\n        }\\r\\n    }\\r\\n<\/script>\\r\\n\\r\\n<h1>Új összetevő hozzáadása</h1>\\r\\n<form on:submit|preventDefault={addIngredient}>\\r\\n    <input type=\\"text\\" bind:value={name} placeholder=\\"Név\\" required />\\r\\n    <input type=\\"number\\" bind:value={quantity} placeholder=\\"Mennyiség\\" required />\\r\\n    <input type=\\"text\\" bind:value={unit} placeholder=\\"Mértékegység\\" required />\\r\\n    <input type=\\"number\\" bind:value={calories} placeholder=\\"Kalória\\" required />\\r\\n    <input type=\\"number\\" bind:value={protein} placeholder=\\"Fehérje\\" required />\\r\\n    <input type=\\"number\\" bind:value={fat} placeholder=\\"Zsír\\" required />\\r\\n    <input type=\\"number\\" bind:value={sugar} placeholder=\\"Cukor\\" required />\\r\\n    <input type=\\"text\\" bind:value={notes} placeholder=\\"Megjegyzés\\" />\\r\\n    <input type=\\"text\\" bind:value={image} placeholder=\\"Kép útvonala\\" />\\r\\n    <button type=\\"submit\\">Hozzáadás</button>\\r\\n</form>\\r\\n\\r\\n<h1>Összetevők listája</h1>\\r\\n<table>\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Név</th>\\r\\n            <th>Mennyiség</th>\\r\\n            <th>Mértékegység</th>\\r\\n            <th>Kalória</th>\\r\\n            <th>Fehérje</th>\\r\\n            <th>Zsír</th>\\r\\n            <th>Cukor</th>\\r\\n            <th>Megjegyzés</th>\\r\\n            <th>Kép</th>\\r\\n            <th>Művelet</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        {#each ingredients as ingredient}\\r\\n            <tr>\\r\\n                <td>{ingredient.name}</td>\\r\\n                <td>{ingredient.quantity}</td>\\r\\n                <td>{ingredient.unit}</td>\\r\\n                <td>{ingredient.calories}</td>\\r\\n                <td>{ingredient.protein}</td>\\r\\n                <td>{ingredient.fat}</td>\\r\\n                <td>{ingredient.sugar}</td>\\r\\n                <td>{ingredient.notes}</td>\\r\\n                <td>\\r\\n                    <img src=\\"{ingredient.image}\\" alt=\\"{ingredient.name}\\" width=\\"50\\" height=\\"50\\" />\\r\\n                </td>\\r\\n                <td>\\r\\n                    <button on:click={() => deleteIngredient(ingredient.id)}>Törlés</button>\\r\\n                </td>\\r\\n            </tr>\\r\\n        {/each}\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<style>\\r\\n    table {\\r\\n        width: 100%;\\r\\n        border-collapse: collapse;\\r\\n        margin-top: 20px;\\r\\n    }\\r\\n\\r\\n    th, td {\\r\\n        padding: 10px;\\r\\n        border: 1px solid #dfdfc3;\\r\\n        text-align: left;\\r\\n    }\\r\\n\\r\\n    th {\\r\\n        background-color: #dbd6b9;\\r\\n    }\\r\\n\\r\\n    img {\\r\\n        border-radius: 4px;\\r\\n    }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AA8GI,oBAAM,CACF,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,QAAQ,CACzB,UAAU,CAAE,IAChB,CAEA,iBAAE,CAAE,iBAAG,CACH,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,IAChB,CAEA,iBAAG,CACC,gBAAgB,CAAE,OACtB,CAEA,kBAAI,CACA,aAAa,CAAE,GACnB"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ingredients = [];
  let name = "";
  let quantity = "";
  let unit = "";
  let calories = "";
  let protein = "";
  let fat = "";
  let sugar = "";
  let notes = "";
  let image = "";
  $$result.css.add(css);
  return `<h1 data-svelte-h="svelte-ymugqx">Új összetevő hozzáadása</h1> <form><input type="text" placeholder="Név" required${add_attribute("value", name, 0)}> <input type="number" placeholder="Mennyiség" required${add_attribute("value", quantity, 0)}> <input type="text" placeholder="Mértékegység" required${add_attribute("value", unit, 0)}> <input type="number" placeholder="Kalória" required${add_attribute("value", calories, 0)}> <input type="number" placeholder="Fehérje" required${add_attribute("value", protein, 0)}> <input type="number" placeholder="Zsír" required${add_attribute("value", fat, 0)}> <input type="number" placeholder="Cukor" required${add_attribute("value", sugar, 0)}> <input type="text" placeholder="Megjegyzés"${add_attribute("value", notes, 0)}> <input type="text" placeholder="Kép útvonala"${add_attribute("value", image, 0)}> <button type="submit" data-svelte-h="svelte-j5o9wo">Hozzáadás</button></form> <h1 data-svelte-h="svelte-ijfqpi">Összetevők listája</h1> <table class="svelte-1qvw0y3"><thead data-svelte-h="svelte-1jonmhj"><tr><th class="svelte-1qvw0y3">Név</th> <th class="svelte-1qvw0y3">Mennyiség</th> <th class="svelte-1qvw0y3">Mértékegység</th> <th class="svelte-1qvw0y3">Kalória</th> <th class="svelte-1qvw0y3">Fehérje</th> <th class="svelte-1qvw0y3">Zsír</th> <th class="svelte-1qvw0y3">Cukor</th> <th class="svelte-1qvw0y3">Megjegyzés</th> <th class="svelte-1qvw0y3">Kép</th> <th class="svelte-1qvw0y3">Művelet</th></tr></thead> <tbody>${each(ingredients, (ingredient) => {
    return `<tr><td class="svelte-1qvw0y3">${escape(ingredient.name)}</td> <td class="svelte-1qvw0y3">${escape(ingredient.quantity)}</td> <td class="svelte-1qvw0y3">${escape(ingredient.unit)}</td> <td class="svelte-1qvw0y3">${escape(ingredient.calories)}</td> <td class="svelte-1qvw0y3">${escape(ingredient.protein)}</td> <td class="svelte-1qvw0y3">${escape(ingredient.fat)}</td> <td class="svelte-1qvw0y3">${escape(ingredient.sugar)}</td> <td class="svelte-1qvw0y3">${escape(ingredient.notes)}</td> <td class="svelte-1qvw0y3"><img${add_attribute("src", ingredient.image, 0)}${add_attribute("alt", ingredient.name, 0)} width="50" height="50" class="svelte-1qvw0y3"></td> <td class="svelte-1qvw0y3"><button data-svelte-h="svelte-1crp5n7">Törlés</button></td> </tr>`;
  })}</tbody> </table>`;
});
export {
  Page as default
};
